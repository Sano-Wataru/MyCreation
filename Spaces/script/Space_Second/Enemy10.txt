script_enemy_main//シールド船//
{
   let gcsd = GetCurrentScriptDirectory;

  //シールドに必要な変数定義// 
   let G_obj = 0;
   let cnt = 0;
   let Life = 10; //敵本体のライフ
   let ShieldLife = 15; //シールドのライフ
  //ここまで//

    @Initialize
    {
        let imgEnemy= gcsd~"img\enemy_all.png";
       SetLife(Life + ShieldLife);//シールドに必要なもの//
    SetTexture(imgEnemy);
    SetGraphicRect(0, 145 ,62 ,167);
    SetGraphicScale(0.7, 0.7);

   LoadUserShotData(gcsd~"ShotData_01.txt");
   ShieldMiniTask(1, 24, 45);//シールドに必要なもの//
   MainTask;
  }

   @MainLoop
   {
       //当たり判定は消す//
    SetGraphicAngle(0, 0, GetAngle - 90);

         Obj_SetPosition( G_obj, GetX, GetY );

     if(GetX < GetClipMinX - 70 || GetX > GetClipMaxX + 70 || GetY < GetClipMinY - 70 || GetY > GetClipMaxY + 70){
        VanishEnemy;
      }
       yield;
   }

   @Finalize
   {
     if(GetX < GetClipMinX - 70 || GetX > GetClipMaxX + 70 || GetY < GetClipMinY - 70 || GetY > GetClipMaxY + 70){
   }else{
     CreateEnemyFromFile(gcsd~"EnemyDeath01.txt", GetX, GetY, 0, 0, 0);
      SetCommonData("PowerAmount", rand(0,2));
      SetCommonData("ShieldAmount", rand(1,3));
    }
   }

   @DrawLoop
   {//描画
     DrawGraphic(GetX, GetY);
   }

     function Wait(let x){
    loop(x){yield;}
        }

 task MainTask{
  loop{
    CreateShot02(GetX + rand(-10, 10), GetY + rand(-10, 10), 0.1, GetAngleToPlayer + rand(-60, 60), 0.03, 2, 7, 10);
    CreateShot02(GetX + rand(-20, 20), GetY + rand(-20, 20), 0.1, GetAngleToPlayer + rand(-60, 60), 0.03, 2, 8, 10);
  Wait(80);
   }
}

#include_function".\Function_ShieldMini.txt"
}