script_enemy_main
{
   let gcsd = GetCurrentScriptDirectory;
   let G_obj = 0;
    @Initialize
    {
       SetLife(600);
      GraphicTask;
      MoveTask;

   LoadUserShotData(gcsd~"ShotData_01.txt");
   CreateEnemyFromScript("worm01", GetX, GetY, 0, 0, 0);
   CreateEnemyFromScript("worm01", GetX, GetY, 0, 0, 1);
   CreateEnemyFromScript("worm01", GetX, GetY, 0, 0, 2);
   CreateEnemyFromScript("worm01", GetX, GetY, 0, 0, 3);
   CreateEnemyFromScript("worm02", GetX, GetY, 0, 0, 0);
   CreateEnemyFromScript("worm03", GetX, GetY, 0, 0, 0);

  }
    @MainLoop
    {
       //“–‚½‚è”»’è//
    SetCollisionA(GetX,GetY,30);
	SetCollisionB(GetX,GetY,30);

     /*Obj_SetPosition(G_obj, GetX, GetY);
     SetSpeed(1);
     ObjEffect_SetAngle(G_obj, 0, 0, GetAngleToPlayer - 180);
     SetAngle(GetAngleToPlayer);*/

     SetCommonData("WormX", GetX);
     SetCommonData("WormY", GetY);
     SetCommonData("WormAngle", GetAngle);

   Obj_SetPosition(G_obj, GetX, GetY);
   ObjEffect_SetAngle(G_obj, 0, 0, GetAngle);
       yield;
  }
    @Finalize
    {
     CreateEnemyFromFile(gcsd~"EnemyDeath01.txt", GetX, GetY, 0, 0, 0);
   loop(rand(0,1)){
     CreateEnemyFromFile(gcsd~"Power.txt", GetX + rand(-20, 20), GetY + rand(-20, 20), 0, 0, 0);
        }
   loop(rand(1,3)){
     CreateEnemyFromFile(gcsd~"Shield_Item.txt", GetX + rand(-40, 40), GetY + rand(-40, 40), 0, 0, 0);
        }
  }
    @DrawLoop
    {//•`‰æ
    DrawGraphic(GetX,GetY);
  }
     function Wait(let x){
    loop(x){yield;}
        }

 task GraphicTask{
  let obj = Obj_Create( OBJ_EFFECT );
  let path = gcsd~"img\Worm.png";

    LoadGraphic(path);
    ObjEffect_SetTexture(obj, path);
    ObjEffect_SetPrimitiveType(obj, PRIMITIVE_TRIANGLESTRIP);
    ObjEffect_CreateVertex(obj, 4);
    ObjEffect_SetVertexUV(obj, 0, 6, 9);
    ObjEffect_SetVertexUV(obj, 1, 61, 9);
    ObjEffect_SetVertexUV(obj, 2, 6, 71);
    ObjEffect_SetVertexUV(obj, 3, 61, 71);
    ObjEffect_SetVertexXY(obj, 0, 6 - 61/2, 9 - 71/2);
    ObjEffect_SetVertexXY(obj, 1, 61 - 61/2, 9 - 71/2);
    ObjEffect_SetVertexXY(obj, 2, 6 - 61/2, 71 - 71/2);
    ObjEffect_SetVertexXY(obj, 3, 61 - 61/2, 71 - 71/2);

     Obj_SetPosition(obj, GetX, GetY);
     ObjEffect_SetRenderState(obj, ALPHA);
     ObjEffect_SetScale(obj, 1, 1);
     ObjEffect_SetLayer(obj, 2);
     ObjEffect_SetAngle(obj, 0, 0, 90);
   G_obj = obj;
 }
 task MoveTask{
  let angle = 0; let distance = 150;

    angle = GetAngleToPlayer;
     loop(500){
   SetSpeed(0.7);
   SetAngle(angle);
      yield;
    }

    loop{
   SetX(GetCenterX + distance*cos(angle));
   SetY(GetCenterY + distance*sin(angle));
   SetAngle(angle);
       angle += 0.3;
     yield;
    }//loop
 }

}

script_enemy worm01{
 let gcsd = GetCurrentScriptDirectory;
 let G_obj = 0;

 @Initialize{
   SetLife(300);
   GraphicTask;
   ProcessTask;
   MoveTask;
 }

 @MainLoop{
    SetCollisionA(GetX,GetY,25);
	SetCollisionB(GetX,GetY,25);

   Obj_SetPosition(G_obj, GetX, GetY);
   ObjEffect_SetAngle(G_obj, 0, 0, GetAngle);
   yield;
 }
 @Finalize{
 }
 @DrawLoop{
 }

 task GraphicTask{
  let obj = Obj_Create( OBJ_EFFECT );
  let path = gcsd~"img\Worm.png";

    LoadGraphic(path);
    ObjEffect_SetTexture(obj, path);
    ObjEffect_SetPrimitiveType(obj, PRIMITIVE_TRIANGLESTRIP);
    ObjEffect_CreateVertex(obj, 4);
    ObjEffect_SetVertexUV(obj, 0, 72, 22);
    ObjEffect_SetVertexUV(obj, 1, 101, 22);
    ObjEffect_SetVertexUV(obj, 2, 72, 60);
    ObjEffect_SetVertexUV(obj, 3, 101, 60);
    ObjEffect_SetVertexXY(obj, 0, 72 - 87, 22 - 36);
    ObjEffect_SetVertexXY(obj, 1, 101 - 87, 22 - 36);
    ObjEffect_SetVertexXY(obj, 2, 72 - 87, 60 - 36);
    ObjEffect_SetVertexXY(obj, 3, 101 - 87, 60 - 36);

     Obj_SetPosition(obj, GetX, GetY);
     ObjEffect_SetRenderState(obj, ALPHA);
     ObjEffect_SetScale(obj, 1, 1);
     ObjEffect_SetLayer(obj, 2);
     ObjEffect_SetAngle(obj, 0, 0, 90);
   G_obj = obj;
 }

task ProcessTask {
  /*let angle = 0; let X = 0; let Y = 0;
    loop{
    X = GetCommonDataDefault("WormX", 0);
    Y = GetCommonDataDefault("WormY", 0);
    angle = GetCommonDataDefault("WormAngle", 0);
     Obj_SetPosition(G_obj, X+50*cos(angle-180), Y+50*sin(angle-180));
     ObjEffect_SetAngle(G_obj, 0, 0, angle - 180);
     SetX(X); SetY(Y);
      yield;
   }*/
 }

task MoveTask{
  let angle = 0; let distance = 150;
    angle = GetAngleToPlayer;
   SetAngle(angle);
  if(GetArgument == 0){
    SetSpeed(0.3);
   Wait(85);
 }
  if(GetArgument == 1){
   SetSpeed(0.1);
   Wait(96);
   }
  if(GetArgument == 2){
   SetSpeed(0.05);
   Wait(122);
   }
  if(GetArgument == 3){
   Wait(145);
   }

     loop(500){
   SetSpeed(0.7);
      yield;
      }
    loop{
   SetX(GetCenterX + distance*cos(angle));
   SetY(GetCenterY + distance*sin(angle));
   SetAngle(angle);
       angle += 0.3;
     yield;
    }//loop
 }

     function Wait(let x){
    loop(x){yield;}
        }
}

script_enemy worm02{
 let gcsd = GetCurrentScriptDirectory;
 let G_obj = 0;

 @Initialize{
   SetLife(300);
   GraphicTask;
   ProcessTask;
   MoveTask;
 }

 @MainLoop{
    SetCollisionA(GetX,GetY,25);
	SetCollisionB(GetX,GetY,25);

   Obj_SetPosition(G_obj, GetX, GetY);
   ObjEffect_SetAngle(G_obj, 0, 0, GetAngle);
   yield;
 }
 @Finalize{
 }
 @DrawLoop{
 }

 task GraphicTask{
  let obj = Obj_Create( OBJ_EFFECT );
  let path = gcsd~"img\Worm.png";

    LoadGraphic(path);
    ObjEffect_SetTexture(obj, path);
    ObjEffect_SetPrimitiveType(obj, PRIMITIVE_TRIANGLESTRIP);
    ObjEffect_CreateVertex(obj, 4);
    ObjEffect_SetVertexUV(obj, 0, 104, 11);
    ObjEffect_SetVertexUV(obj, 1, 152, 11);
    ObjEffect_SetVertexUV(obj, 2, 104, 75);
    ObjEffect_SetVertexUV(obj, 3, 152, 75);
    ObjEffect_SetVertexXY(obj, 0, 104 - 128, 11 - 35);
    ObjEffect_SetVertexXY(obj, 1, 152 - 128, 11 - 35);
    ObjEffect_SetVertexXY(obj, 2, 104 - 128, 75 - 35);
    ObjEffect_SetVertexXY(obj, 3, 152 - 128, 75 - 35);

     Obj_SetPosition(obj, GetX, GetY);
     ObjEffect_SetRenderState(obj, ALPHA);
     ObjEffect_SetScale(obj, 0.8, 0.8);
     ObjEffect_SetLayer(obj, 2);
     ObjEffect_SetAngle(obj, 0, 0, 90);
   G_obj = obj;
 }

task ProcessTask {
  /*let angle = 0; let X = 0; let Y = 0;
    loop{
    X = GetCommonDataDefault("WormX", 0);
    Y = GetCommonDataDefault("WormY", 0);
    angle = GetCommonDataDefault("WormAngle", 0);
     Obj_SetPosition(G_obj, X+50*cos(angle-180), Y+50*sin(angle-180));
     ObjEffect_SetAngle(G_obj, 0, 0, angle - 180);
     SetX(X); SetY(Y);
      yield;
   }*/
 }

task MoveTask{
  let angle = 0; let distance = 150;
    angle = GetAngleToPlayer;
   SetAngle(angle);
    Wait(175);

     loop(500){
   SetSpeed(0.7);
      yield;
      }
    loop{
   SetX(GetCenterX + distance*cos(angle));
   SetY(GetCenterY + distance*sin(angle));
   SetAngle(angle);
       angle += 0.3;
     yield;
    }//loop
 }

     function Wait(let x){
    loop(x){yield;}
        }
}

script_enemy worm03{
 let gcsd = GetCurrentScriptDirectory;
 let G_obj = 0;

 @Initialize{
   SetLife(300);
   GraphicTask;
   ProcessTask;
   MoveTask;
 }

 @MainLoop{
    SetCollisionA(GetX,GetY,25);
	SetCollisionB(GetX,GetY,25);

   Obj_SetPosition(G_obj, GetX, GetY);
   ObjEffect_SetAngle(G_obj, 0, 0, GetAngle);
   yield;
 }
 @Finalize{
 }
 @DrawLoop{
 }

 task GraphicTask{
  let obj = Obj_Create( OBJ_EFFECT );
  let path = gcsd~"img\Worm.png";

    LoadGraphic(path);
    ObjEffect_SetTexture(obj, path);
    ObjEffect_SetPrimitiveType(obj, PRIMITIVE_TRIANGLESTRIP);
    ObjEffect_CreateVertex(obj, 4);
    ObjEffect_SetVertexUV(obj, 0, 161, 17);
    ObjEffect_SetVertexUV(obj, 1, 193, 17);
    ObjEffect_SetVertexUV(obj, 2, 161, 64);
    ObjEffect_SetVertexUV(obj, 3, 193, 64);
    ObjEffect_SetVertexXY(obj, 0, 161 - 177, 17 - 37);
    ObjEffect_SetVertexXY(obj, 1, 193 - 177, 17 - 37);
    ObjEffect_SetVertexXY(obj, 2, 161 - 177, 64 - 37);
    ObjEffect_SetVertexXY(obj, 3, 193 - 177, 64 - 37);

     Obj_SetPosition(obj, GetX, GetY);
     ObjEffect_SetRenderState(obj, ALPHA);
     ObjEffect_SetScale(obj, 1, 1);
     ObjEffect_SetLayer(obj, 2);
     ObjEffect_SetAngle(obj, 0, 0, 90);
   G_obj = obj;
 }

task ProcessTask {
  /*let angle = 0; let X = 0; let Y = 0;
    loop{
    X = GetCommonDataDefault("WormX", 0);
    Y = GetCommonDataDefault("WormY", 0);
    angle = GetCommonDataDefault("WormAngle", 0);
     Obj_SetPosition(G_obj, X+50*cos(angle-180), Y+50*sin(angle-180));
     ObjEffect_SetAngle(G_obj, 0, 0, angle - 180);
     SetX(X); SetY(Y);
      yield;
   }*/
 }

task MoveTask{
  let angle = 0; let distance = 150;
    angle = GetAngleToPlayer;
   SetAngle(angle);
    Wait(222);

     loop(500){
   SetSpeed(0.7);
      yield;
      }
    loop{
   SetX(GetCenterX + distance*cos(angle));
   SetY(GetCenterY + distance*sin(angle));
   SetAngle(angle);
       angle += 0.3;
     yield;
    }//loop
 }

     function Wait(let x){
    loop(x){yield;}
        }
}

script_enemy worm04{
 let gcsd = GetCurrentScriptDirectory;
 let G_obj = 0;

 @Initialize{
   SetLife(300);
   GraphicTask;
   ProcessTask;
   MoveTask;
 }

 @MainLoop{
    SetCollisionA(GetX,GetY,25);
	SetCollisionB(GetX,GetY,25);

   Obj_SetPosition(G_obj, GetX, GetY);
   ObjEffect_SetAngle(G_obj, 0, 0, GetAngle);
   yield;
 }
 @Finalize{
 }
 @DrawLoop{
 }

 task GraphicTask{
  let obj = Obj_Create( OBJ_EFFECT );
  let path = gcsd~"img\Worm.png";

    LoadGraphic(path);
    ObjEffect_SetTexture(obj, path);
    ObjEffect_SetPrimitiveType(obj, PRIMITIVE_TRIANGLESTRIP);
    ObjEffect_CreateVertex(obj, 4);
    ObjEffect_SetVertexUV(obj, 0, 194, 5);
    ObjEffect_SetVertexUV(obj, 1, 248, 5);
    ObjEffect_SetVertexUV(obj, 2, 194, 79);
    ObjEffect_SetVertexUV(obj, 3, 248, 79);
    ObjEffect_SetVertexXY(obj, 0, 194 - 221, 17 - 41);
    ObjEffect_SetVertexXY(obj, 1, 248 - 221, 17 - 41);
    ObjEffect_SetVertexXY(obj, 2, 194 - 221, 64 - 41);
    ObjEffect_SetVertexXY(obj, 3, 248 - 221, 64 - 41);

     Obj_SetPosition(obj, GetX, GetY);
     ObjEffect_SetRenderState(obj, ALPHA);
     ObjEffect_SetScale(obj, 1, 1);
     ObjEffect_SetLayer(obj, 2);
     ObjEffect_SetAngle(obj, 0, 0, 90);
   G_obj = obj;
 }

task ProcessTask {
  /*let angle = 0; let X = 0; let Y = 0;
    loop{
    X = GetCommonDataDefault("WormX", 0);
    Y = GetCommonDataDefault("WormY", 0);
    angle = GetCommonDataDefault("WormAngle", 0);
     Obj_SetPosition(G_obj, X+50*cos(angle-180), Y+50*sin(angle-180));
     ObjEffect_SetAngle(G_obj, 0, 0, angle - 180);
     SetX(X); SetY(Y);
      yield;
   }*/
 }

task MoveTask{
  let angle = 0; let distance = 150;
    angle = GetAngleToPlayer;
   SetAngle(angle);
    Wait(252);

     loop(500){
   SetSpeed(0.7);
      yield;
      }
    loop{
   SetX(GetCenterX + distance*cos(angle));
   SetY(GetCenterY + distance*sin(angle));
   SetAngle(angle);
       angle += 0.3;
     yield;
    }//loop
 }

     function Wait(let x){
    loop(x){yield;}
        }
}