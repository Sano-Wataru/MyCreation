script_enemy_main
{
  let gcsd = GetCurrentScriptDirectory;
  let G_obj = [0,0];
  let G_obj2 = [0,0];
    @Initialize{
       SetLife(10);
      TriangleGraphic;
      TriangleGraphic2;
    }

    @MainLoop{
       yield;
    }

    @Finalize{
    }

    @DrawLoop{
    }

     function Wait(let x){
      loop(x){yield;}
        }

 task TriangleGraphic{
  let z = 0;
  let z2 = 0;
   Triangle01_Sub;
   Triangle_Scale;
  loop{
    ObjEffect_SetAngle(G_obj[0], 0, 0, z);
    ObjEffect_SetAngle(G_obj[1], 0, 0, z2);
      z += 3;
      z2 -= 3;
      yield;
    }
 }

 task TriangleGraphic2{
 let size = 0;
 let angle = 0;
 let angle2 = 0;
 let alpha = 255;
   Triangle02_Sub;
   loop(43){
    ObjEffect_SetScale(G_obj2[0], size, size);
    ObjEffect_SetAngle(G_obj2[0], 0, 0, angle);

    ObjEffect_SetScale(G_obj2[1], size, size);
    ObjEffect_SetAngle(G_obj2[1], 0, 0, angle2);
        size += 0.01;
        angle += 10;
        angle2 -= 10;
       yield;
     }
   loop(30){
     ObjEffect_SetVertexColor( G_obj2[0], 0, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj2[0], 1, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj2[0], 2, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj2[0], 3, alpha, 255, 255, 255);

     ObjEffect_SetVertexColor( G_obj2[1], 0, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj2[1], 1, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj2[1], 2, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj2[1], 3, alpha, 255, 255, 255);
        alpha -= 255/30;
         yield;
     }
   Wait(60);
   VanishEnemy;
}

 task Triangle_Scale{
   let scale = 1;
   let scale2 = 1;
   let cnt = 0.02;
   let alpha = 255;
   loop(45){
     ObjEffect_SetScale( G_obj[0], scale, scale);
     ObjEffect_SetScale( G_obj[1], scale2, scale2);
    scale -= cnt;
    scale2 -= cnt;
        yield;
     }

   loop(70){
     ObjEffect_SetScale( G_obj[0], scale, scale);
     ObjEffect_SetScale( G_obj[1], scale2, scale2);

     ObjEffect_SetVertexColor( G_obj[0], 0, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj[0], 1, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj[0], 2, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj[0], 3, alpha, 255, 255, 255);

     ObjEffect_SetVertexColor( G_obj[1], 0, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj[1], 1, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj[1], 2, alpha, 255, 255, 255);
     ObjEffect_SetVertexColor( G_obj[1], 3, alpha, 255, 255, 255);

    scale -= cnt;
    scale2 -= cnt;
    alpha -= 255/70;
        yield;
     }
  Obj_Delete(G_obj);

}

  sub Triangle01_Sub{
        let obj = [Obj_Create( OBJ_EFFECT), Obj_Create( OBJ_EFFECT)];
        let path = GetCurrentScriptDirectory ~ "img\Triangle01.png";//ƒpƒX
        let a = -220; let b = -240; let n = 0;

     loop(2){
         ObjEffect_SetTexture( obj[n], path);
         ObjEffect_SetPrimitiveType( obj[n], PRIMITIVE_TRIANGLEFAN);
         ObjEffect_CreateVertex( obj[n], 4);
         ObjEffect_SetVertexUV( obj[n], 0, 0, 0);
         ObjEffect_SetVertexUV( obj[n], 1, 440, 0);
         ObjEffect_SetVertexUV( obj[n], 2, 440, 440);
         ObjEffect_SetVertexUV( obj[n], 3, 0, 440);
         ObjEffect_SetVertexXY( obj[n], 0, 0+a, 0+b);
         ObjEffect_SetVertexXY( obj[n], 1, 440+a, 0+b);
         ObjEffect_SetVertexXY( obj[n], 2, 440+a, 440+b);
         ObjEffect_SetVertexXY( obj[n], 3, 0+a, 440+b);
          Obj_SetPosition( obj[n], GetX, GetY );
          ObjEffect_SetScale( obj[n], 1, 1);
          ObjEffect_SetLayer( obj[n], 2 );
        G_obj[n] = obj[n];
         ObjEffect_SetRenderState(obj[n], ALPHA);
            n++
      }
   }

 sub Triangle02_Sub{
       let obj = [Obj_Create(OBJ_EFFECT), Obj_Create(OBJ_EFFECT)];
       let path = gcsd ~ "\img\Triangle02.png";
       let a = -303/2; let b = -303/2; let n = 0;

   loop(2){
        ObjEffect_SetTexture(obj[n], path);
        ObjEffect_SetPrimitiveType(obj[n], PRIMITIVE_TRIANGLEFAN);
        ObjEffect_CreateVertex(obj[n], 4);
        ObjEffect_SetVertexUV(obj[n], 0, 0, 0);
        ObjEffect_SetVertexUV(obj[n], 1, 303, 0);
        ObjEffect_SetVertexUV(obj[n], 2, 303, 303);
        ObjEffect_SetVertexUV(obj[n], 3, 0, 303);
        ObjEffect_SetVertexXY(obj[n], 0, 0+a, 0+b);
        ObjEffect_SetVertexXY(obj[n], 1, 303+a, 0+b);
        ObjEffect_SetVertexXY(obj[n], 2, 303+a, 303+b);
        ObjEffect_SetVertexXY(obj[n], 3, 0+a, 303+b);
         Obj_SetPosition(obj[n], GetX, GetY);
         ObjEffect_SetScale(obj[n], 0, 0);
         ObjEffect_SetLayer(obj[n], 2);
         ObjEffect_SetRenderState(obj[n], ALPHA);
      G_obj2[n] = obj[n];
            n ++;
        }
   }

}